---
- name: Create Database ({{ projectname }})
  become: true
  # PostgreSQL will only allow users to login from the postgres account by default
  become_user: postgres
  postgresql_db: name={{ db_name }}

- name: Create DB User ({{ projectname }})
  become: true
  become_user: postgres
  postgresql_user: >
    name={{ db_user }}
    password={{ db_password }}
    state=present role_attr_flags=NOSUPERUSER,CREATEDB

- name: Provide user with DB permissions ({{ projectname }})
  become: true
  become_user: postgres
  postgresql_user: user={{ db_user }} db={{ db_name }} priv=ALL

- name: Setup Virtualenv and upgrade setuptools and pip ({{ projectname }})
  pip:
    name: "{{ item }}"
    state: latest
    virtualenv: "{{ virtualenv_path }}"
    virtualenv_python: "{{ python3_path }}"
  with_items:
    - setuptools
    - pip

- name: Install requirements ({{ projectname }})
  pip:
    virtualenv: "{{ virtualenv_path }}"
    requirements: "{{ project_root_path }}/requirements.txt"

- name: Install some dev tools ({{ projectname }})
  pip: name={{ item }} virtualenv={{ virtualenv_path }}
  with_items:
    - ipdb
    - ipython
    - django-extensions

- name: Install .env file ({{ projectname }})
  template: src=env_{{ projectname}}.j2 dest="{{ project_root_path }}/{{ projectname }}/.env" force=no

- name: Django commands ({{ projectname }})
  django_manage: command={{ item }} app_path={{ project_root_path }} virtualenv={{ virtualenv_path }}
  with_items: "{{ django_commands }}"

